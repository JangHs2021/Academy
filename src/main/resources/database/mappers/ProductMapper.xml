<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.ac.home.product.ProductDAO">
  	<sql id="searchCondition">
 		 <if test="kind == 'title'">
 			WHERE TITLE LIKE  '%' || #{search} || '%'
 		</if>
 		
 		<if test="kind == 'info'">
 			WHERE INFO LIKE  '%' || #{search} || '%'
 		</if>
 	
 	</sql>
 	
 	<sql id="searchCondition2">
 		WHERE
						
			<choose>
				<when test="kind == 'title'">
					TITLE  
				</when>
				<otherwise>
					INFO
				</otherwise>
			</choose>
		 LIKE  '%' || #{search} || '%'
 	
 	</sql>
 	
 	
 	
 	<select id="getProductCount" parameterType="Pager" resultType="Long">
 		SELECT COUNT(NUM) FROM PRODUCT
 	 	<include refid="searchCondition"></include>	
 	</select>
 	
 	<select id="getProductLogin" parameterType="ProductDTO" resultType="ProductDTO">
  		SELECT *
		FROM 
		PRODUCT 
		WHERE TITLE = #{title}
  	</select>
 
 	<select id="getProductList" parameterType="Pager" resultMap="productDetailResult">
 		SELECT * FROM
			(
				SELECT ROWNUM R, B.* FROM
					(
						SELECT * FROM PRODUCT R
						LEFT OUTER JOIN
						PRODUCTIMG B
						ON(R.NUM = B.NUM)
						LEFT OUTER JOIN
					 	PRODUCTKIND C
					 	ON(B.NUM = C.NUM)
						LEFT OUTER JOIN
						CATEGORY A
						ON(C.ID = A.ID)
						<include refid="searchCondition"></include>						
						ORDER BY REGDATE DESC
					) B 
			)
		WHERE R BETWEEN #{startRow}  AND #{lastRow} 
	</select>
	
 	<select id="getProductDetail" parameterType="ProductDTO" resultMap="productDetailResult">
 		SELECT B.*, BI.*
		FROM PRODUCT B
			 LEFT OUTER JOIN
			 PRODUCTIMG BI
			 ON (B.NUM = BI.NUM)
		WHERE B.NUM	=#{num}
 	</select>
 	
 	<resultMap type="ProductDTO" id="productDetailResult">
 		<!-- Primary key -->
 		<id column="NUM" property="num"/>
 		<!-- 그외 나머지 -->
 		<result column="TITLE" property="title"/>
 		<result column="PRICE" property="price"/>
 		<result column="INFO" property="info"/>
 		<result column="REGDATE" property="regDate"/>
 	<!-- 	<result column="CATEGORYNUM" property="categoryNum"/>
 		<result column="QUANTITY" property="quantity"/> -->
 		
 		
 		<!-- 1:1 -->
 		<collection property="productImgDTOs" javaType="List" ofType="ProductImgDTO">
 			<id column="FILENUM" property="fileNum"/>
 			<result column="SAVE" property="save"/>
 			<result column="UPLOAD" property="upLoad"/>
 		</collection>
 		<!-- 1:N -->
 		<!-- <collection property=""></collection> -->
 		<collection property="categoryDTOs" javaType="List" ofType="categoryDTO">
 			<id column="ID" property="id"/>
 			<result column="NAME" property="name"/>
 		</collection>	
 	</resultMap>

 	<insert id="setProductAdd" parameterType="ProductDTO">
 		<selectKey keyProperty="num" resultType="Long" order="BEFORE">
 			SELECT PRODUCT_SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		INSERT INTO PRODUCT 
 		VALUES (#{num} ,#{title}, #{price}, #{info},SYSDATE,1)
 	</insert>
 	


 	<delete id="setProductDelete" parameterType="ProductDTO">
 		DELETE PRODUCT WHERE NUM=#{num}
 		
 	</delete> 
 	
 	<update id="setProductUpdate" parameterType="ProductDTO">
 		UPDATE PRODUCT SET TITLE=#{title}, PRICE=#{price}, INFO=#{info}
 		WHERE NUM=#{num}
 	</update>
 	
 	<insert id="setProductImgAdd" parameterType="ProductImgDTO">
 		INSERT INTO PRODUCTIMG
 		VALUES (PRODUCT_SEQ.NEXTVAL, #{num}, #{save}, #{upLoad})
 	</insert>
 	 
 	 <select id="getProductFileList" resultType="ProductImgDTO" parameterType="ProductDTO">
  		SELECT * FROM PRODUCTIMG WHERE NUM = #{num}
	</select>
	
	<delete id="getProductFileDelete" parameterType="ProductImgDTO">
		DELETE PRODUCTIMG WHERE FILENUM=#{fileNum}
	</delete>
	
	
	
	
  	
  </mapper>
		
 	